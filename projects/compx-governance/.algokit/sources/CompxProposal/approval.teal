#pragma version 10
intcblock 1 0
bytecblock 0x746f74616c5f766f746573 0x7965735f766f746573 0x6578706972795f74696d657374616d70

// This TEAL was generated by TEALScript v0.106.2
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication(string,string,uint64)void
*abi_route_createApplication:
	// expires_in: uint64
	txna ApplicationArgs 3
	btoi

	// proposalDescription: string
	txna ApplicationArgs 2
	extract 2 0

	// proposalTitle: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createApplication(string,string,uint64)void
	callsub createApplication
	intc 0 // 1
	return

// createApplication(proposalTitle: string, proposalDescription: string, expires_in: uint64): void
createApplication:
	proto 3 0

	// contracts/CompxProposal.algo.ts:39
	// this.total_votes.value = 0
	bytec 0 //  "total_votes"
	intc 1 // 0
	app_global_put

	// contracts/CompxProposal.algo.ts:40
	// this.yes_votes.value = 0
	bytec 1 //  "yes_votes"
	intc 1 // 0
	app_global_put

	// contracts/CompxProposal.algo.ts:41
	// this.proposal_title.value = proposalTitle
	pushbytes 0x70726f706f73616c5f7469746c65 // "proposal_title"
	frame_dig -1 // proposalTitle: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts/CompxProposal.algo.ts:42
	// this.proposal_description.value = proposalDescription
	pushbytes 0x70726f706f73616c5f6465736372697074696f6e // "proposal_description"
	frame_dig -2 // proposalDescription: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts/CompxProposal.algo.ts:43
	// this.expiry_timestamp.value = globals.latestTimestamp + expires_in
	bytec 2 //  "expiry_timestamp"
	global LatestTimestamp
	frame_dig -3 // expires_in: uint64
	+
	app_global_put

	// contracts/CompxProposal.algo.ts:44
	// this.created_at.value = globals.latestTimestamp
	pushbytes 0x637265617465645f6174 // "created_at"
	global LatestTimestamp
	app_global_put
	retsub

// makeProposalVote(pay,bool)void
*abi_route_makeProposalVote:
	// voteYes: bool
	txna ApplicationArgs 1
	dup
	len
	intc 0 // 1
	==

	// argument 0 (voteYes) for makeProposalVote must be a bool
	assert
	intc 1 // 0
	getbit

	// mbrTxn: pay
	txn GroupIndex
	intc 0 // 1
	-
	dup
	gtxns TypeEnum
	intc 0 //  pay
	==

	// argument 1 (mbrTxn) for makeProposalVote must be a pay transaction
	assert

	// execute makeProposalVote(pay,bool)void
	callsub makeProposalVote
	intc 0 // 1
	return

// makeProposalVote(mbrTxn: PayTxn, voteYes: boolean): void
makeProposalVote:
	proto 2 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	pushbytes 0x

	// contracts/CompxProposal.algo.ts:57
	// assert(mbrTxn.receiver === this.app.address, 'Invalid receiver')
	frame_dig -1 // mbrTxn: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==

	// Invalid receiver
	assert

	// contracts/CompxProposal.algo.ts:61
	// voterAddress: Address = this.txn.sender
	txn Sender
	frame_bury 0 // voterAddress: Address

	// contracts/CompxProposal.algo.ts:64
	// verifyPayTxn(mbrTxn, { amount: { greaterThanEqualTo: vote_mbr } })
	// verify amount
	frame_dig -1 // mbrTxn: PayTxn
	gtxns Amount
	pushint 1952
	>=

	// transaction verification failed: {"txn":"mbrTxn","field":"amount","condition":"greaterThanEqualTo","expected":">=vote_mbr"}
	assert

	// contracts/CompxProposal.algo.ts:67
	// assert(!this.vote({ voter_address: voterAddress }).exists, 'Already voted')
	frame_dig 0 // voterAddress: Address
	box_len
	swap
	pop
	!

	// Already voted
	assert

	// contracts/CompxProposal.algo.ts:70
	// assert(globals.latestTimestamp < this.expiry_timestamp.value, 'Proposal expired')
	global LatestTimestamp
	bytec 2 //  "expiry_timestamp"
	app_global_get
	<

	// Proposal expired
	assert

	// contracts/CompxProposal.algo.ts:75
	// this.vote({ voter_address: voterAddress }).value = { vote_yes: voteYes }
	frame_dig 0 // voterAddress: Address
	pushbytes 0x00
	intc 1 // 0
	frame_dig -2 // voteYes: boolean
	setbit
	box_put

	// contracts/CompxProposal.algo.ts:77
	// this.total_votes.value += 1
	bytec 0 //  "total_votes"
	app_global_get
	intc 0 // 1
	+
	bytec 0 //  "total_votes"
	swap
	app_global_put

	// *if0_condition
	// contracts/CompxProposal.algo.ts:78
	// voteYes
	frame_dig -2 // voteYes: boolean
	bz *if0_end

	// *if0_consequent
	// contracts/CompxProposal.algo.ts:79
	// this.yes_votes.value += 1
	bytec 1 //  "yes_votes"
	app_global_get
	intc 0 // 1
	+
	bytec 1 //  "yes_votes"
	swap
	app_global_put

*if0_end:
	retsub

*create_NoOp:
	pushbytes 0xc04b75f4 // method "createApplication(string,string,uint64)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x39e0ceb8 // method "makeProposalVote(pay,bool)void"
	txna ApplicationArgs 0
	match *abi_route_makeProposalVote

	// this contract does not implement the given ABI method for call NoOp
	err