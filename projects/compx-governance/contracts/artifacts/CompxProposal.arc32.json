{
  "hints": {
    "createApplication(string,string,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "makeProposalVote(pay,bool)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "compx_governance_address": {
          "type": "bytes",
          "key": "TGIPEOKUFC5JFTPFMXGSZWOGOFA7THFZXUTRLQEOH3RD3LGI6QEEWJNML4"
        },
        "total_votes": {
          "type": "uint64",
          "key": "total_votes"
        },
        "compx_governance_main_address": {
          "type": "bytes",
          "key": "compx_governance_main_address"
        },
        "proposal_title": {
          "type": "bytes",
          "key": "proposal_title"
        },
        "proposal_description": {
          "type": "bytes",
          "key": "proposal_description"
        },
        "expiry_timestamp": {
          "type": "uint64",
          "key": "expiry_timestamp"
        },
        "created_at": {
          "type": "uint64",
          "key": "created_at"
        },
        "yes_votes": {
          "type": "uint64",
          "key": "yes_votes"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 4,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDAKYnl0ZWNibG9jayAweDc0NmY3NDYxNmM1Zjc2NmY3NDY1NzMgMHg3OTY1NzM1Zjc2NmY3NDY1NzMgMHg2NTc4NzA2OTcyNzk1Zjc0Njk2ZDY1NzM3NDYxNmQ3MAoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDYuMgovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKcHVzaGludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKHN0cmluZyxzdHJpbmcsdWludDY0KXZvaWQKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCS8vIGV4cGlyZXNfaW46IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwoJYnRvaQoKCS8vIHByb3Bvc2FsRGVzY3JpcHRpb246IHN0cmluZwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJZXh0cmFjdCAyIDAKCgkvLyBwcm9wb3NhbFRpdGxlOiBzdHJpbmcKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWV4dHJhY3QgMiAwCgoJLy8gZXhlY3V0ZSBjcmVhdGVBcHBsaWNhdGlvbihzdHJpbmcsc3RyaW5nLHVpbnQ2NCl2b2lkCgljYWxsc3ViIGNyZWF0ZUFwcGxpY2F0aW9uCglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBjcmVhdGVBcHBsaWNhdGlvbihwcm9wb3NhbFRpdGxlOiBzdHJpbmcsIHByb3Bvc2FsRGVzY3JpcHRpb246IHN0cmluZywgZXhwaXJlc19pbjogdWludDY0KTogdm9pZApjcmVhdGVBcHBsaWNhdGlvbjoKCXByb3RvIDMgMAoKCS8vIGNvbnRyYWN0cy9Db21weFByb3Bvc2FsLmFsZ28udHM6MzkKCS8vIHRoaXMudG90YWxfdm90ZXMudmFsdWUgPSAwCglieXRlYyAwIC8vICAidG90YWxfdm90ZXMiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvQ29tcHhQcm9wb3NhbC5hbGdvLnRzOjQwCgkvLyB0aGlzLnllc192b3Rlcy52YWx1ZSA9IDAKCWJ5dGVjIDEgLy8gICJ5ZXNfdm90ZXMiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvQ29tcHhQcm9wb3NhbC5hbGdvLnRzOjQxCgkvLyB0aGlzLnByb3Bvc2FsX3RpdGxlLnZhbHVlID0gcHJvcG9zYWxUaXRsZQoJcHVzaGJ5dGVzIDB4NzA3MjZmNzA2ZjczNjE2YzVmNzQ2OTc0NmM2NSAvLyAicHJvcG9zYWxfdGl0bGUiCglmcmFtZV9kaWcgLTEgLy8gcHJvcG9zYWxUaXRsZTogc3RyaW5nCglkdXAKCWxlbgoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvQ29tcHhQcm9wb3NhbC5hbGdvLnRzOjQyCgkvLyB0aGlzLnByb3Bvc2FsX2Rlc2NyaXB0aW9uLnZhbHVlID0gcHJvcG9zYWxEZXNjcmlwdGlvbgoJcHVzaGJ5dGVzIDB4NzA3MjZmNzA2ZjczNjE2YzVmNjQ2NTczNjM3MjY5NzA3NDY5NmY2ZSAvLyAicHJvcG9zYWxfZGVzY3JpcHRpb24iCglmcmFtZV9kaWcgLTIgLy8gcHJvcG9zYWxEZXNjcmlwdGlvbjogc3RyaW5nCglkdXAKCWxlbgoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvQ29tcHhQcm9wb3NhbC5hbGdvLnRzOjQzCgkvLyB0aGlzLmV4cGlyeV90aW1lc3RhbXAudmFsdWUgPSBnbG9iYWxzLmxhdGVzdFRpbWVzdGFtcCArIGV4cGlyZXNfaW4KCWJ5dGVjIDIgLy8gICJleHBpcnlfdGltZXN0YW1wIgoJZ2xvYmFsIExhdGVzdFRpbWVzdGFtcAoJZnJhbWVfZGlnIC0zIC8vIGV4cGlyZXNfaW46IHVpbnQ2NAoJKwoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvQ29tcHhQcm9wb3NhbC5hbGdvLnRzOjQ0CgkvLyB0aGlzLmNyZWF0ZWRfYXQudmFsdWUgPSBnbG9iYWxzLmxhdGVzdFRpbWVzdGFtcAoJcHVzaGJ5dGVzIDB4NjM3MjY1NjE3NDY1NjQ1ZjYxNzQgLy8gImNyZWF0ZWRfYXQiCglnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBtYWtlUHJvcG9zYWxWb3RlKHBheSxib29sKXZvaWQKKmFiaV9yb3V0ZV9tYWtlUHJvcG9zYWxWb3RlOgoJLy8gdm90ZVllczogYm9vbAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludGMgMCAvLyAxCgk9PQoKCS8vIGFyZ3VtZW50IDAgKHZvdGVZZXMpIGZvciBtYWtlUHJvcG9zYWxWb3RlIG11c3QgYmUgYSBib29sCglhc3NlcnQKCWludGMgMSAvLyAwCglnZXRiaXQKCgkvLyBtYnJUeG46IHBheQoJdHhuIEdyb3VwSW5kZXgKCWludGMgMCAvLyAxCgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnRjIDAgLy8gIHBheQoJPT0KCgkvLyBhcmd1bWVudCAxIChtYnJUeG4pIGZvciBtYWtlUHJvcG9zYWxWb3RlIG11c3QgYmUgYSBwYXkgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIGV4ZWN1dGUgbWFrZVByb3Bvc2FsVm90ZShwYXksYm9vbCl2b2lkCgljYWxsc3ViIG1ha2VQcm9wb3NhbFZvdGUKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIG1ha2VQcm9wb3NhbFZvdGUobWJyVHhuOiBQYXlUeG4sIHZvdGVZZXM6IGJvb2xlYW4pOiB2b2lkCm1ha2VQcm9wb3NhbFZvdGU6Cglwcm90byAyIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJcHVzaGJ5dGVzIDB4CgoJLy8gY29udHJhY3RzL0NvbXB4UHJvcG9zYWwuYWxnby50czo1OQoJLy8gYXNzZXJ0KG1iclR4bi5yZWNlaXZlciA9PT0gdGhpcy5hcHAuYWRkcmVzcywgJ0ludmFsaWQgcmVjZWl2ZXInKQoJZnJhbWVfZGlnIC0xIC8vIG1iclR4bjogUGF5VHhuCglndHhucyBSZWNlaXZlcgoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCT09CgoJLy8gSW52YWxpZCByZWNlaXZlcgoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL0NvbXB4UHJvcG9zYWwuYWxnby50czo2MwoJLy8gdm90ZXJBZGRyZXNzOiBBZGRyZXNzID0gdGhpcy50eG4uc2VuZGVyCgl0eG4gU2VuZGVyCglmcmFtZV9idXJ5IDAgLy8gdm90ZXJBZGRyZXNzOiBBZGRyZXNzCgoJLy8gY29udHJhY3RzL0NvbXB4UHJvcG9zYWwuYWxnby50czo2NgoJLy8gdmVyaWZ5UGF5VHhuKG1iclR4biwgeyBhbW91bnQ6IHsgZ3JlYXRlclRoYW5FcXVhbFRvOiB2b3RlX21iciB9IH0pCgkvLyB2ZXJpZnkgYW1vdW50CglmcmFtZV9kaWcgLTEgLy8gbWJyVHhuOiBQYXlUeG4KCWd0eG5zIEFtb3VudAoJcHVzaGludCAxOTUyCgk+PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoibWJyVHhuIiwiZmllbGQiOiJhbW91bnQiLCJjb25kaXRpb24iOiJncmVhdGVyVGhhbkVxdWFsVG8iLCJleHBlY3RlZCI6Ij49dm90ZV9tYnIifQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL0NvbXB4UHJvcG9zYWwuYWxnby50czo2OQoJLy8gYXNzZXJ0KCF0aGlzLnZvdGUoeyB2b3Rlcl9hZGRyZXNzOiB2b3RlckFkZHJlc3MgfSkuZXhpc3RzLCAnQWxyZWFkeSB2b3RlZCcpCglmcmFtZV9kaWcgMCAvLyB2b3RlckFkZHJlc3M6IEFkZHJlc3MKCWJveF9sZW4KCXN3YXAKCXBvcAoJIQoKCS8vIEFscmVhZHkgdm90ZWQKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Db21weFByb3Bvc2FsLmFsZ28udHM6NzIKCS8vIGFzc2VydChnbG9iYWxzLmxhdGVzdFRpbWVzdGFtcCA8IHRoaXMuZXhwaXJ5X3RpbWVzdGFtcC52YWx1ZSwgJ1Byb3Bvc2FsIGV4cGlyZWQnKQoJZ2xvYmFsIExhdGVzdFRpbWVzdGFtcAoJYnl0ZWMgMiAvLyAgImV4cGlyeV90aW1lc3RhbXAiCglhcHBfZ2xvYmFsX2dldAoJPAoKCS8vIFByb3Bvc2FsIGV4cGlyZWQKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Db21weFByb3Bvc2FsLmFsZ28udHM6NzQKCS8vIHRoaXMudm90ZSh7IHZvdGVyX2FkZHJlc3M6IHZvdGVyQWRkcmVzcyB9KS52YWx1ZSA9IHsgdm90ZV95ZXM6IHZvdGVZZXMgfQoJZnJhbWVfZGlnIDAgLy8gdm90ZXJBZGRyZXNzOiBBZGRyZXNzCglwdXNoYnl0ZXMgMHgwMAoJaW50YyAxIC8vIDAKCWZyYW1lX2RpZyAtMiAvLyB2b3RlWWVzOiBib29sZWFuCglzZXRiaXQKCWJveF9wdXQKCgkvLyBjb250cmFjdHMvQ29tcHhQcm9wb3NhbC5hbGdvLnRzOjc2CgkvLyB0aGlzLnRvdGFsX3ZvdGVzLnZhbHVlICs9IDEKCWJ5dGVjIDAgLy8gICJ0b3RhbF92b3RlcyIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMQoJKwoJYnl0ZWMgMCAvLyAgInRvdGFsX3ZvdGVzIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCgkvLyAqaWYwX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL0NvbXB4UHJvcG9zYWwuYWxnby50czo3NwoJLy8gdm90ZVllcwoJZnJhbWVfZGlnIC0yIC8vIHZvdGVZZXM6IGJvb2xlYW4KCWJ6ICppZjBfZW5kCgoJLy8gKmlmMF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvQ29tcHhQcm9wb3NhbC5hbGdvLnRzOjc4CgkvLyB0aGlzLnllc192b3Rlcy52YWx1ZSArPSAxCglieXRlYyAxIC8vICAieWVzX3ZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAxCgkrCglieXRlYyAxIC8vICAieWVzX3ZvdGVzIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCippZjBfZW5kOgoJcmV0c3ViCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhjMDRiNzVmNCAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKHN0cmluZyxzdHJpbmcsdWludDY0KXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHgzOWUwY2ViOCAvLyBtZXRob2QgIm1ha2VQcm9wb3NhbFZvdGUocGF5LGJvb2wpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfbWFrZVByb3Bvc2FsVm90ZQoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "CompxProposal",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "proposalTitle",
            "type": "string"
          },
          {
            "name": "proposalDescription",
            "type": "string"
          },
          {
            "name": "expires_in",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "makeProposalVote",
        "args": [
          {
            "name": "mbrTxn",
            "type": "pay"
          },
          {
            "name": "voteYes",
            "type": "bool"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}