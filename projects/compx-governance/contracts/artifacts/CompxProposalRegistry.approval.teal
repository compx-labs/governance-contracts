#pragma version 10
intcblock 1
bytecblock 0x7265675f70726f706f73616c5f

// This TEAL was generated by TEALScript v0.106.2
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication()void
*abi_route_createApplication:
	// execute createApplication()void
	callsub createApplication
	intc 0 // 1
	return

// createApplication(): void
createApplication:
	proto 0 0

	// contracts/ProposalRegistry.algo.ts:20
	// this.compx_governance_address.value = this.txn.sender
	pushbytes 0x636f6d70785f676f7665726e616e63655f61646472657373 // "compx_governance_address"
	txn Sender
	app_global_put
	retsub

// registerProposal(uint64,pay,uint64,uint64)void
*abi_route_registerProposal:
	// expiry_timestamp: uint64
	txna ApplicationArgs 3
	btoi

	// start_timestamp: uint64
	txna ApplicationArgs 2
	btoi

	// mbrTxn: pay
	txn GroupIndex
	intc 0 // 1
	-
	dup
	gtxns TypeEnum
	intc 0 //  pay
	==

	// argument 2 (mbrTxn) for registerProposal must be a pay transaction
	assert

	// appId: uint64
	txna ApplicationArgs 1
	btoi

	// execute registerProposal(uint64,pay,uint64,uint64)void
	callsub registerProposal
	intc 0 // 1
	return

// registerProposal(appId: AppID, mbrTxn: PayTxn, start_timestamp: uint64, expiry_timestamp: uint64): void
registerProposal:
	proto 4 0

	// contracts/ProposalRegistry.algo.ts:29
	// verifyPayTxn(mbrTxn, { amount: { greaterThanEqualTo: proposalRegistryMbr } })
	// verify amount
	frame_dig -2 // mbrTxn: PayTxn
	gtxns Amount
	pushint 1000
	>=

	// transaction verification failed: {"txn":"mbrTxn","field":"amount","condition":"greaterThanEqualTo","expected":">=proposalRegistryMbr"}
	assert

	// contracts/ProposalRegistry.algo.ts:32
	// assert(!this.registered_proposals({ proposal_id: appId }).exists)
	bytec 0 //  "reg_proposal_"
	frame_dig -1 // appId: AppID
	itob
	concat
	box_len
	swap
	pop
	!
	assert

	// contracts/ProposalRegistry.algo.ts:33
	// this.registered_proposals({ proposal_id: appId }).value = {
	//       start_timestamp: start_timestamp,
	//       expiry_timestamp: expiry_timestamp,
	//     }
	bytec 0 //  "reg_proposal_"
	frame_dig -1 // appId: AppID
	itob
	concat
	frame_dig -3 // start_timestamp: uint64
	itob
	frame_dig -4 // expiry_timestamp: uint64
	itob
	concat
	box_put
	retsub

*create_NoOp:
	pushbytes 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0xa967529f // method "registerProposal(uint64,pay,uint64,uint64)void"
	txna ApplicationArgs 0
	match *abi_route_registerProposal

	// this contract does not implement the given ABI method for call NoOp
	err